apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ghost-ingress
  namespace: ghost-blog
  annotations:
    # ——— Controller selection ———
    kubernetes.io/ingress.class: alb                     # use AWS ALB controller

    # ——— ALB basics ———
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/load-balancer-name: ghost-blog-alb
    alb.ingress.kubernetes.io/subnets: subnet-0938321955bd47378,subnet-04062e8c33a5ffbac
    alb.ingress.kubernetes.io/group.name: ghost-alb-group

    # ——— Target group ———
    alb.ingress.kubernetes.io/target-type: ip            # targets are pods
    alb.ingress.kubernetes.io/backend-protocol: HTTP     # Ghost listens on plain HTTP (2368)

    # ——— Health-checks ———
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/success-codes: '200-399'

    # ——— TLS termination ———
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:939966404706:certificate/ce4f864b-a7e8-47d9-8531-8e17094a6382
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443},{"HTTP":80}]'

    # ——— HTTP → HTTPS redirect ———
    alb.ingress.kubernetes.io/force-ssl-redirect: "true"
    alb.ingress.kubernetes.io/actions.ssl-redirect: >
      {"Type":"redirect","RedirectConfig":{"Protocol":"HTTPS","Port":"443","StatusCode":"HTTP_301"}}

    # ——— Security-group automation ———
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
spec:
  rules:
  - host: blog.cloudmasa.com
    http:
      paths:
      # 1️⃣ Plain-HTTP request hits port 80 → immediately rewritten to HTTPS
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: ssl-redirect          # “fake” backend used only for the redirect rule
            port:
              name: use-annotation

      # 2️⃣ All HTTPS traffic is routed to the Ghost service on port 80 (→ 2368)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ghost
            port:
              number: 80                # must match Service.spec.ports[].port
